{"version":3,"sources":["reportWebVitals.js","services/auth.service.js","components/Login.js","components/Register.js","services/auth-header.js","services/user.service.js","components/Home.js","components/Profile.js","components/BoardUser.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","API_URL","username","email","password","axios","post","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","required","value","className","role","Login","props","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","message","setMessage","src","alt","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","AuthService","history","push","window","location","reload","error","resMessage","toString","ref","htmlFor","type","name","onChange","target","validations","disabled","style","display","validEmail","isEmail","vusername","vpassword","Register","setEmail","successful","setSuccessful","authHeader","user","Authorization","get","headers","Home","content","setContent","useEffect","UserService","_content","Profile","currentUser","substring","substr","id","roles","map","index","BoardUser","App","showModeratorBoard","setShowModeratorBoard","showAdminBoard","setShowAdminBoard","undefined","setCurrentUser","includes","to","href","onClick","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44e9b89c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"https://peace-of-mind-backend.herokuapp.com/v1/\";\r\n\r\nconst register = (username, email, password) => {\r\n    return axios.post(API_URL + \"usuarios\", {\r\n        username,\r\n        email,\r\n        password,\r\n    });\r\n};\r\n\r\nconst login = (username, password) => {\r\n    return axios\r\n        .post(API_URL + \"/usuarios/entrar\", {\r\n            username,\r\n            password,\r\n        })\r\n        .then((response) => {\r\n            if (response.data.accessToken) {\r\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n            }\r\n\r\n            return response.data;\r\n        });\r\n};\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nexport default {\r\n    register,\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst Login = (props) => {\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n    };\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n    };\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        setMessage(\"\");\r\n        setLoading(true);\r\n\r\n        form.current.validateAll();\r\n\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            AuthService.login(username, password).then(\r\n                () => {\r\n                    props.history.push(\"/profile\");\r\n                    window.location.reload();\r\n                },\r\n                (error) => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    setLoading(false);\r\n                    setMessage(resMessage);\r\n                }\r\n            );\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n                <img\r\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                    alt=\"profile-img\"\r\n                    className=\"profile-img-card\"\r\n                />\r\n\r\n                <Form onSubmit={handleLogin} ref={form}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={onChangeUsername}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <Input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={onChangePassword}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n                            {loading && (\r\n                                <span className=\"spinner-border spinner-border-sm\"></span>\r\n                            )}\r\n                            <span>Login</span>\r\n                        </button>\r\n                    </div>\r\n\r\n                    {message && (\r\n                        <div className=\"form-group\">\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vusername = (value) => {\r\n    if (value.length < 3 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The username must be between 3 and 20 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password must be between 6 and 40 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst Register = (props) => {\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n    };\r\n\r\n    const onChangeEmail = (e) => {\r\n        const email = e.target.value;\r\n        setEmail(email);\r\n    };\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        setMessage(\"\");\r\n        setSuccessful(false);\r\n\r\n        form.current.validateAll();\r\n\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            AuthService.register(username, email, password).then(\r\n                (response) => {\r\n                    setMessage(response.data.message);\r\n                    setSuccessful(true);\r\n                },\r\n                (error) => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    setMessage(resMessage);\r\n                    setSuccessful(false);\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n                <img\r\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                    alt=\"profile-img\"\r\n                    className=\"profile-img-card\"\r\n                />\r\n\r\n                <Form onSubmit={handleRegister} ref={form}>\r\n                    {!successful && (\r\n                        <div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">Username</label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"username\"\r\n                                    value={username}\r\n                                    onChange={onChangeUsername}\r\n                                    validations={[required, vusername]}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"email\"\r\n                                    value={email}\r\n                                    onChange={onChangeEmail}\r\n                                    validations={[required, validEmail]}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    name=\"password\"\r\n                                    value={password}\r\n                                    onChange={onChangePassword}\r\n                                    validations={[required, vpassword]}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {message && (\r\n                        <div className=\"form-group\">\r\n                            <div\r\n                                className={successful ? \"alert alert-success\" : \"alert alert-danger\"}\r\n                                role=\"alert\"\r\n                            >\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (user && user.accessToken) {\r\n        return { Authorization: 'Bearer ' + user.accessToken };\r\n    } else {\r\n        return {};\r\n    }\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"https://peace-of-mind-backend.herokuapp.com/v1/\";\r\n\r\nconst getPublicContent = () => {\r\n    return axios.get(API_URL + \"enfermedades\");\r\n};\r\n\r\nconst getUserBoard = () => {\r\n    return axios.get(API_URL + \"user\", { headers: authHeader() });\r\n};\r\n\r\n\r\nexport default {\r\n    getPublicContent,\r\n    getUserBoard,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nconst Home = () => {\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        UserService.getPublicContent().then(\r\n            (response) => {\r\n                setContent(response.data);\r\n            },\r\n            (error) => {\r\n                const _content =\r\n                    (error.response && error.response.data) ||\r\n                    error.message ||\r\n                    error.toString();\r\n\r\n                setContent(_content);\r\n            }\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <header className=\"jumbotron\">\r\n                <h3>{content}</h3>\r\n            </header>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst Profile = () => {\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <header className=\"jumbotron\">\r\n                <h3>\r\n                    <strong>{currentUser.username}</strong> Profile\r\n                </h3>\r\n            </header>\r\n            <p>\r\n                <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n                {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n            </p>\r\n            <p>\r\n                <strong>Id:</strong> {currentUser.id}\r\n            </p>\r\n            <p>\r\n                <strong>Email:</strong> {currentUser.email}\r\n            </p>\r\n            <strong>Authorities:</strong>\r\n            <ul>\r\n                {currentUser.roles &&\r\n                    currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nconst BoardUser = () => {\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        UserService.getUserBoard().then(\r\n            (response) => {\r\n                setContent(response.data);\r\n            },\r\n            (error) => {\r\n                const _content =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n\r\n                setContent(_content);\r\n            }\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <header className=\"jumbotron\">\r\n                <h3>{content}</h3>\r\n            </header>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoardUser;","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport BoardUser from \"./components/BoardUser\";\n\nconst App = () => {\n    const [showModeratorBoard, setShowModeratorBoard] = useState(false);\n    const [showAdminBoard, setShowAdminBoard] = useState(false);\n    const [currentUser, setCurrentUser] = useState(undefined);\n\n    useEffect(() => {\n        const user = AuthService.getCurrentUser();\n\n        if (user) {\n            setCurrentUser(user);\n            setShowModeratorBoard(user.roles.includes(\"ROLE_MODERATOR\"));\n            setShowAdminBoard(user.roles.includes(\"ROLE_ADMIN\"));\n        }\n    }, []);\n\n    const logOut = () => {\n        AuthService.logout();\n    };\n\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n                <Link to={\"/\"} className=\"navbar-brand\">\n                    bezKoder\n                </Link>\n                <div className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to={\"/home\"} className=\"nav-link\">\n                            Home\n                        </Link>\n                    </li>\n\n                    {showModeratorBoard && (\n                        <li className=\"nav-item\">\n                            <Link to={\"/mod\"} className=\"nav-link\">\n                                Moderator Board\n                            </Link>\n                        </li>\n                    )}\n\n                    {showAdminBoard && (\n                        <li className=\"nav-item\">\n                            <Link to={\"/admin\"} className=\"nav-link\">\n                                Admin Board\n                            </Link>\n                        </li>\n                    )}\n\n                    {currentUser && (\n                        <li className=\"nav-item\">\n                            <Link to={\"/user\"} className=\"nav-link\">\n                                User\n                            </Link>\n                        </li>\n                    )}\n                </div>\n\n                {currentUser ? (\n                    <div className=\"navbar-nav ml-auto\">\n                        <li className=\"nav-item\">\n                            <Link to={\"/profile\"} className=\"nav-link\">\n                                {currentUser.username}\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                                LogOut\n                            </a>\n                        </li>\n                    </div>\n                ) : (\n                    <div className=\"navbar-nav ml-auto\">\n                        <li className=\"nav-item\">\n                            <Link to={\"/login\"} className=\"nav-link\">\n                                Login\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <Link to={\"/register\"} className=\"nav-link\">\n                                Sign Up\n                            </Link>\n                        </li>\n                    </div>\n                )}\n            </nav>\n\n            <div className=\"container mt-3\">\n                <Switch>\n                    <Route exact path={[\"/\", \"/home\"]} component={Home} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <Route exact path=\"/profile\" component={Profile} />\n                    <Route path=\"/user\" component={BoardUser} />\n                </Switch>\n            </div>\n        </div>\n    );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}